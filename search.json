[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "this is a test",
    "section": "",
    "text": "Preface\nThis is a Quarto book.\nTo learn more about Quarto books visit https://quarto.org/docs/books.\n\nlibrary(systemfonts)\nlibrary(dplyr)\n\n\nAttaching package: 'dplyr'\n\n\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n\ndf &lt;- system_fonts()\ndf |&gt;\n  group_by(family) |&gt;\n  count() |&gt;\n  arrange(desc(n))\n\n# A tibble: 186 × 2\n# Groups:   family [186]\n   family                    n\n   &lt;chr&gt;                 &lt;int&gt;\n 1 Helvetica Neue           14\n 2 Avenir                   12\n 3 Avenir Next              12\n 4 Avenir Next Condensed    12\n 5 Hiragino Sans            10\n 6 Skia                     10\n 7 Apple SD Gothic Neo       9\n 8 Gill Sans                 9\n 9 Noto Sans Kannada         9\n10 Noto Sans Myanmar         9\n# ℹ 176 more rows\n\ndim(df)\n\n[1] 528   9\n\nhead(df)\n\n# A tibble: 6 × 9\n  path                    index name  family style weight width italic monospace\n  &lt;chr&gt;                   &lt;int&gt; &lt;chr&gt; &lt;chr&gt;  &lt;chr&gt; &lt;ord&gt;  &lt;ord&gt; &lt;lgl&gt;  &lt;lgl&gt;    \n1 /System/Library/Fonts/…     1 Shre… Shree… Bold  bold   norm… FALSE  FALSE    \n2 /System/Library/Fonts/…     0 Acad… Acade… Plain normal norm… FALSE  FALSE    \n3 /System/Library/Fonts/…     0 Impa… Impact Regu… heavy  semi… FALSE  FALSE    \n4 /System/Library/Fonts/…     3 Kohi… Kohin… Bold  bold   norm… FALSE  FALSE    \n5 /System/Library/Fonts/…     5 Ping… PingF… Medi… medium norm… FALSE  FALSE    \n6 /System/Library/Fonts/…     2 Sukh… Sukhu… Text  normal norm… FALSE  FALSE    \n\nsort(unique(df$family))\n\n  [1] \"Academy Engraved LET\"      \"Al Bayan\"                 \n  [3] \"Al Nile\"                   \"Al Tarikh\"                \n  [5] \"American Typewriter\"       \"Andale Mono\"              \n  [7] \"Apple Braille\"             \"Apple Chancery\"           \n  [9] \"Apple Color Emoji\"         \"Apple SD Gothic Neo\"      \n [11] \"Apple Symbols\"             \"AppleGothic\"              \n [13] \"AppleMyungjo\"              \"Arial\"                    \n [15] \"Arial Black\"               \"Arial Hebrew\"             \n [17] \"Arial Hebrew Scholar\"      \"Arial Narrow\"             \n [19] \"Arial Rounded MT Bold\"     \"Arial Unicode MS\"         \n [21] \"Avenir\"                    \"Avenir Next\"              \n [23] \"Avenir Next Condensed\"     \"Ayuthaya\"                 \n [25] \"Baghdad\"                   \"Bangla MN\"                \n [27] \"Bangla Sangam MN\"          \"Baskerville\"              \n [29] \"Beirut\"                    \"Big Caslon\"               \n [31] \"Bodoni 72\"                 \"Bodoni 72 Oldstyle\"       \n [33] \"Bodoni 72 Smallcaps\"       \"Bodoni Ornaments\"         \n [35] \"Bradley Hand\"              \"Brush Script MT\"          \n [37] \"Chalkboard\"                \"Chalkboard SE\"            \n [39] \"Chalkduster\"               \"Charter\"                  \n [41] \"Cochin\"                    \"Comic Sans MS\"            \n [43] \"Copperplate\"               \"Corsiva Hebrew\"           \n [45] \"Courier New\"               \"Damascus\"                 \n [47] \"DecoType Naskh\"            \"Devanagari MT\"            \n [49] \"Devanagari Sangam MN\"      \"Didot\"                    \n [51] \"DIN Alternate\"             \"DIN Condensed\"            \n [53] \"Diwan Kufi\"                \"Diwan Thuluth\"            \n [55] \"Euphemia UCAS\"             \"Farah\"                    \n [57] \"Farisi\"                    \"Futura\"                   \n [59] \"Galvji\"                    \"GB18030 Bitmap\"           \n [61] \"Geeza Pro\"                 \"Geneva\"                   \n [63] \"Georgia\"                   \"Gill Sans\"                \n [65] \"Grantha Sangam MN\"         \"Gujarati MT\"              \n [67] \"Gujarati Sangam MN\"        \"Gurmukhi MN\"              \n [69] \"Gurmukhi MT\"               \"Gurmukhi Sangam MN\"       \n [71] \"Heiti SC\"                  \"Heiti TC\"                 \n [73] \"Helvetica\"                 \"Helvetica Neue\"           \n [75] \"Herculanum\"                \"Hiragino Maru Gothic ProN\"\n [77] \"Hiragino Mincho ProN\"      \"Hiragino Sans\"            \n [79] \"Hiragino Sans GB\"          \"Hoefler Text\"             \n [81] \"Impact\"                    \"InaiMathi\"                \n [83] \"ITF Devanagari\"            \"ITF Devanagari Marathi\"   \n [85] \"Kailasa\"                   \"Kannada MN\"               \n [87] \"Kannada Sangam MN\"         \"Kefa\"                     \n [89] \"Khmer MN\"                  \"Khmer Sangam MN\"          \n [91] \"Kohinoor Bangla\"           \"Kohinoor Devanagari\"      \n [93] \"Kohinoor Gujarati\"         \"Kohinoor Telugu\"          \n [95] \"Kokonor\"                   \"Krungthep\"                \n [97] \"KufiStandardGK\"            \"Lao MN\"                   \n [99] \"Lao Sangam MN\"             \"Lucida Grande\"            \n[101] \"Luminari\"                  \"Malayalam MN\"             \n[103] \"Malayalam Sangam MN\"       \"Marker Felt\"              \n[105] \"Menlo\"                     \"Microsoft Sans Serif\"     \n[107] \"Mishafi\"                   \"Mishafi Gold\"             \n[109] \"Monaco\"                    \"Mshtakan\"                 \n[111] \"Mukta Mahee\"               \"Muna\"                     \n[113] \"Myanmar MN\"                \"Myanmar Sangam MN\"        \n[115] \"Nadeem\"                    \"New Peninim MT\"           \n[117] \"Noteworthy\"                \"Noto Nastaliq Urdu\"       \n[119] \"Noto Sans Kannada\"         \"Noto Sans Myanmar\"        \n[121] \"Noto Sans Oriya\"           \"Noto Serif Myanmar\"       \n[123] \"Optima\"                    \"Oriya MN\"                 \n[125] \"Oriya Sangam MN\"           \"Palatino\"                 \n[127] \"Papyrus\"                   \"Party LET\"                \n[129] \"Phosphate\"                 \"PingFang HK\"              \n[131] \"PingFang SC\"               \"PingFang TC\"              \n[133] \"Plantagenet Cherokee\"      \"PT Mono\"                  \n[135] \"PT Sans\"                   \"PT Sans Caption\"          \n[137] \"PT Sans Narrow\"            \"PT Serif\"                 \n[139] \"PT Serif Caption\"          \"Raanana\"                  \n[141] \"Rockwell\"                  \"Sana\"                     \n[143] \"Sathu\"                     \"Savoye LET\"               \n[145] \"Shree Devanagari 714\"      \"SignPainter\"              \n[147] \"Silom\"                     \"Sinhala MN\"               \n[149] \"Sinhala Sangam MN\"         \"Skia\"                     \n[151] \"Snell Roundhand\"           \"Songti SC\"                \n[153] \"Songti TC\"                 \"STIXGeneral\"              \n[155] \"STIXIntegralsD\"            \"STIXIntegralsSm\"          \n[157] \"STIXIntegralsUp\"           \"STIXIntegralsUpD\"         \n[159] \"STIXIntegralsUpSm\"         \"STIXNonUnicode\"           \n[161] \"STIXSizeFiveSym\"           \"STIXSizeFourSym\"          \n[163] \"STIXSizeOneSym\"            \"STIXSizeThreeSym\"         \n[165] \"STIXSizeTwoSym\"            \"STIXVariants\"             \n[167] \"STSong\"                    \"Sukhumvit Set\"            \n[169] \"Symbol\"                    \"Tahoma\"                   \n[171] \"Tamil MN\"                  \"Tamil Sangam MN\"          \n[173] \"Telugu MN\"                 \"Telugu Sangam MN\"         \n[175] \"Thonburi\"                  \"Times New Roman\"          \n[177] \"Trattatello\"               \"Trebuchet MS\"             \n[179] \"Verdana\"                   \"Waseem\"                   \n[181] \"Webdings\"                  \"Wingdings\"                \n[183] \"Wingdings 2\"               \"Wingdings 3\"              \n[185] \"Zapf Dingbats\"             \"Zapfino\"                  \n\n\n\n\nHeader\n\n\n&lt;h4 class=\"card-title\"&gt;Primary card title&lt;/h4&gt;\n&lt;p class=\"card-text\"&gt;Some quick example text to build on the card title and make up the bulk of the card's content.&lt;/p&gt;\n\n\n\n\nHeader\n\n\n&lt;h4 class=\"card-title\"&gt;Secondary card title&lt;/h4&gt;\n&lt;p class=\"card-text\"&gt;Some quick example text to build on the card title and make up the bulk of the card's content.&lt;/p&gt;\n\n\n\n\n\n\n\n\nNote\n\n\n\nNote\n\n\n\n\n\n\n\n\nTip\n\n\n\nTip\n\n\n\n\n\n\n\n\nCaution\n\n\n\nCaution\n\n\n\n\n\n\n\n\nWarning\n\n\n\nWarning\n\n\n\n\n\n\n\n\nImportant\n\n\n\nImportant"
  },
  {
    "objectID": "intro.html",
    "href": "intro.html",
    "title": "1  Introduction",
    "section": "",
    "text": "This is a book created from markdown and executable code.\nSee Knuth (1984) for additional discussion of literate programming.\n\nlibrary(ggplot2)\nggplot(iris, aes(Sepal.Width, Sepal.Length)) + geom_point() + ggtitle(\"Iris Dataset\") +\ntheme(plot.title = element_text(family = \"Droid Sans Fallback\"))\n\nWarning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): no font could\nbe found for family \"Droid Sans Fallback\"\n\nWarning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): no font could\nbe found for family \"Droid Sans Fallback\"\n\nWarning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): no font could\nbe found for family \"Droid Sans Fallback\"\n\nWarning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): no font could\nbe found for family \"Droid Sans Fallback\"\n\nWarning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): no font could\nbe found for family \"Droid Sans Fallback\"\n\nWarning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): no font could\nbe found for family \"Droid Sans Fallback\"\n\nWarning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): no font could\nbe found for family \"Droid Sans Fallback\"\n\nWarning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): no font could\nbe found for family \"Droid Sans Fallback\"\n\nWarning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): no font could\nbe found for family \"Droid Sans Fallback\"\n\nWarning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): no font could\nbe found for family \"Droid Sans Fallback\"\n\nWarning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): no font could\nbe found for family \"Droid Sans Fallback\"\n\nWarning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): no font could\nbe found for family \"Droid Sans Fallback\"\n\nWarning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): no font could\nbe found for family \"Droid Sans Fallback\"\n\nWarning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): no font could\nbe found for family \"Droid Sans Fallback\"\n\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : no\nfont could be found for family \"Droid Sans Fallback\"\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : no\nfont could be found for family \"Droid Sans Fallback\"\n\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\nUnable to calculate text width/height (using zero)\n\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : no\nfont could be found for family \"Droid Sans Fallback\"\n\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\nUnable to calculate text width/height (using zero)\n\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : no\nfont could be found for family \"Droid Sans Fallback\"\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : no\nfont could be found for family \"Droid Sans Fallback\"\n\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\nUnable to calculate text width/height (using zero)\n\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : no\nfont could be found for family \"Droid Sans Fallback\"\n\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\nUnable to calculate text width/height (using zero)\n\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : no\nfont could be found for family \"Droid Sans Fallback\"\n\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\nUnable to calculate text width/height (using zero)\n\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : no\nfont could be found for family \"Droid Sans Fallback\"\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : no\nfont could be found for family \"Droid Sans Fallback\"\n\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\nUnable to calculate text width/height (using zero)\n\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : no\nfont could be found for family \"Droid Sans Fallback\"\n\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\nUnable to calculate text width/height (using zero)\n\n\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, : no\nfont could be found for family \"Droid Sans Fallback\"\n\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, : no\nfont could be found for family \"Droid Sans Fallback\"\n\n\n\n\nggplot(iris, aes(Sepal.Width, Sepal.Length)) + geom_point() + ggtitle(\"Iris Dataset\") +\ntheme(plot.title = element_text(family = \"Nato Mono\"))\n\nWarning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): no font could\nbe found for family \"Nato Mono\"\n\n\nWarning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): no font could\nbe found for family \"Nato Mono\"\n\nWarning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): no font could\nbe found for family \"Nato Mono\"\n\nWarning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): no font could\nbe found for family \"Nato Mono\"\n\nWarning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): no font could\nbe found for family \"Nato Mono\"\n\nWarning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): no font could\nbe found for family \"Nato Mono\"\n\nWarning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): no font could\nbe found for family \"Nato Mono\"\n\nWarning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): no font could\nbe found for family \"Nato Mono\"\n\nWarning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): no font could\nbe found for family \"Nato Mono\"\n\nWarning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): no font could\nbe found for family \"Nato Mono\"\n\nWarning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): no font could\nbe found for family \"Nato Mono\"\n\nWarning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): no font could\nbe found for family \"Nato Mono\"\n\nWarning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): no font could\nbe found for family \"Nato Mono\"\n\nWarning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): no font could\nbe found for family \"Nato Mono\"\n\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : no\nfont could be found for family \"Nato Mono\"\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : no\nfont could be found for family \"Nato Mono\"\n\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\nUnable to calculate text width/height (using zero)\n\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : no\nfont could be found for family \"Nato Mono\"\n\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\nUnable to calculate text width/height (using zero)\n\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : no\nfont could be found for family \"Nato Mono\"\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : no\nfont could be found for family \"Nato Mono\"\n\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\nUnable to calculate text width/height (using zero)\n\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : no\nfont could be found for family \"Nato Mono\"\n\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\nUnable to calculate text width/height (using zero)\n\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : no\nfont could be found for family \"Nato Mono\"\n\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\nUnable to calculate text width/height (using zero)\n\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : no\nfont could be found for family \"Nato Mono\"\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : no\nfont could be found for family \"Nato Mono\"\n\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\nUnable to calculate text width/height (using zero)\n\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : no\nfont could be found for family \"Nato Mono\"\n\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :\nUnable to calculate text width/height (using zero)\n\n\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, : no\nfont could be found for family \"Nato Mono\"\n\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, : no\nfont could be found for family \"Nato Mono\"\n\n\n\n\n\n\n\n\n\nKnuth, Donald E. 1984. “Literate Programming.” Comput. J. 27 (2): 97–111. https://doi.org/10.1093/comjnl/27.2.97."
  },
  {
    "objectID": "summary.html",
    "href": "summary.html",
    "title": "2  Summary",
    "section": "",
    "text": "In summary, this book has no content whatsoever.\n\n1 + 1\n\n[1] 2"
  },
  {
    "objectID": "references.html",
    "href": "references.html",
    "title": "References",
    "section": "",
    "text": "Knuth, Donald E. 1984. “Literate Programming.” Comput.\nJ. 27 (2): 97–111. https://doi.org/10.1093/comjnl/27.2.97."
  }
]